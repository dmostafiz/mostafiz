/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: DatSketch (https://sketchfab.com/DatSketch)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/wireless-gaming-headset-3075896c0ab84e23a6f085c300c33805
title: Wireless Gaming Headset
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import gsap from 'gsap'

export function HeadphoneModel(props) {
  const { nodes, materials } = useGLTF('/models_glb/headphone.glb')


  const headPhoneRef = useRef(null)


  useEffect(() => {

    if (headPhoneRef.current) {

      const timeline = new gsap.timeline()

      timeline.to(headPhoneRef.current.rotation, {
        z: -10,
        duration: 60,
        repeat: -1,
        ease: 'none'
      })

    }

  }, [headPhoneRef.current])


  return (
    <group {...props} dispose={null}>
      <group ref={headPhoneRef} scale={.8} rotation={[-Math.PI / 2, 0, 1]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group position={[0, -0.22, 0]} rotation={[0, 0, 1.28]} scale={[1, 0.61, 1]}>
            <mesh castShadow receiveShadow geometry={nodes.Object_4.geometry} material={materials.RoughPlastic} />
            <mesh castShadow receiveShadow geometry={nodes.Object_5.geometry} material={materials.Silver} />
            <mesh castShadow receiveShadow geometry={nodes.Object_6.geometry} material={materials.Plastic} />
            <mesh castShadow receiveShadow geometry={nodes.Object_7.geometry} material={materials.Logo} />
            <mesh castShadow receiveShadow geometry={nodes.Object_8.geometry} material={materials.Black_Leather} />
            <mesh castShadow receiveShadow geometry={nodes.Object_9.geometry} material={materials.material} />
            <mesh castShadow receiveShadow geometry={nodes.Object_10.geometry} material={materials.material_6} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/scene-transformed.glb')
